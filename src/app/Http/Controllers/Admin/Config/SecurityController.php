<?php

namespace App\Http\Controllers\Admin\Config;

use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\Config\CsrRequest;
use App\Http\Requests\Admin\Config\SslCertificateRequest;
use App\Models\AppSettings;
use App\Services\Admin\CertificateService;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Inertia\Inertia;
use Inertia\Response;

class SecurityController extends Controller
{
    public function __construct(protected CertificateService $svc) {}

    /**
     * Display a listing of the resource.
     */
    public function index(): Response
    {
        $this->authorize('viewAny', AppSettings::class);

        return Inertia::render('Admin/Security/Index', [
            'data' => fn () => $this->svc->getCertMetaData(),
        ]);
    }

    /**
     * Show the form for uploading a new SSL Certificate.
     */
    public function create(): Response
    {
        $this->authorize('viewAny', AppSettings::class);

        return Inertia::render('Admin/Security/Create', [
            'has-key' => $this->svc->verifyKey(),
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(SslCertificateRequest $request): RedirectResponse
    {
        $this->svc->saveCertificateFiles(
            $request->certificate,
            $request->intermediate,
            $request->key
        );

        Log::notice(
            'New SSL Certificate uploaded by '.$request->user()->username
        );

        return redirect(route('admin.security.index'))
            ->with('success', __('admin.security.updated'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(): Response
    {
        $this->authorize('viewAny', AppSettings::class);

        return Inertia::render('Admin/Security/Edit');
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(CsrRequest $request): Response
    {
        Log::notice(
            'New CSR Request generated by '.$request->user()->username,
            $request->toArray()
        );

        return Inertia::render('Admin/Security/Edit', [
            'csr-request' => $this->svc
                ->generateCsrRequest($request->safe()->collect()),
        ]);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Request $request): RedirectResponse
    {
        $this->authorize('update', AppSettings::class);

        $this->svc->destroyCertificate();

        Log::notice('SSL Certificate Deleted by '.$request->user()->username);

        return back()->with('warning', __('admin.security.deleted'));
    }
}
