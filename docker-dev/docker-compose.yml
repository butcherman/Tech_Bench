################################################################################
#                                                                              #
#                                                                              #
#                         Tech Bench Docker Development                        #
#           NOTE:  Check .env file for necessary fields to modify to           #
#                      secure this Tech Bench installation                     #
#                                                                              #
#                                                                              #
################################################################################
networks:
    app-tier:
        driver: bridge
services:
    #  Application Container
    tech_bench:
        container_name: tech_bench
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            - ../src:/app
            - ./.env:/app/.env
        environment:
            - SERVICE=app
            - TB_URL=${BASE_URL}
        networks:
            - app-tier

    #  NGINX Web Server
    nginx:
        # image: butcherman/tech_bench_nginx:1.0
        build:
            context: ../docker/nginx
            dockerfile: Dockerfile
        container_name: nginx
        restart: unless-stopped
        volumes:
            - ../src:/app
            - ./nginx/https.conf:/opt/bitnami/nginx/conf/server_blocks/tech_bench_https.conf
        ports:
            - "80:80"
            - "443:443"
        networks:
            - app-tier

    #  MySQL Database Container
    database:
        image: butcherman/tech_bench_database:1.0
        container_name: database
        restart: unless-stopped
        volumes:
            - ../appData/database:/bitnami/mysql/data
            - ./database/setup.dev.sql:/docker-entrypoint-initdb.d/setup.dev.sql
        networks:
            - app-tier
        ports:
            - "3306:3306"

    #  Redis Container for Cache, Job and Email Queuing
    redis:
        image: butcherman/tech_bench_redis:1.0
        container_name: redis
        restart: unless-stopped
        volumes:
            - ../appData/redis:/bitnami/redis/data
        networks:
            - app-tier
        ports:
            - "6379:6379"

    #  Horizon Container to run background jobs
    horizon:
        container_name: horizon
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            # - ../src:/app
            - ./.env:/app/.env
            - ../src/app:/app/app
            - ../src/bootstrap:/app/bootstrap
            - ../src/config:/app/config
            - ../src/database:/app/database
            - ../src/keystore:/app/keystore
            - ../src/lang:/app/lang
            - ../src/node_modules:/app/node_modules
            - ../src/public:/app/public
            - ../src/resources:/app/resources
            - ../src/routes:/app/routes
            - ../src/vendor:/app/vendor
            - ../src/storage/app:/app/storage/app
            - ../src/storage/backups:/app/storage/backups
            - ../src/storage/framework:/app/storage/framework
            - ../src/storage/logs/Horizon:/app/storage/logs/Application
            - ../src/storage/pail:/app/storage/pail
            - ../src/artisan:/app/artisan
            - ../src/composer.json:/app/composer.json
            - ../src/composer.lock:/app/composer.lock
            - ../src/package-lock.json:/app/package-lock.json
            - ../src/package.json:/app/package.json
            - ../src/tsconfig.json:/app/tsconfig.json
            - ../src/vite.config.js:/app/vite.config.js
        environment:
            - SERVICE=horizon
        networks:
            - app-tier
        depends_on:
            - database
            - redis
        entrypoint: php artisan horizon:watch --without-tty

    #  Scheduler Container to monitor and run scheduled jobs
    scheduler:
        container_name: scheduler
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            # - ../src:/app
            - ./.env:/app/.env
            - ../src/app:/app/app
            - ../src/bootstrap:/app/bootstrap
            - ../src/config:/app/config
            - ../src/database:/app/database
            - ../src/keystore:/app/keystore
            - ../src/lang:/app/lang
            - ../src/node_modules:/app/node_modules
            - ../src/public:/app/public
            - ../src/resources:/app/resources
            - ../src/routes:/app/routes
            - ../src/vendor:/app/vendor
            - ../src/storage/app:/app/storage/app
            - ../src/storage/backups:/app/storage/backups
            - ../src/storage/framework:/app/storage/framework
            - ../src/storage/logs/Scheduler:/app/storage/logs/Application
            - ../src/storage/pail:/app/storage/pail
            - ../src/artisan:/app/artisan
            - ../src/composer.json:/app/composer.json
            - ../src/composer.lock:/app/composer.lock
            - ../src/package-lock.json:/app/package-lock.json
            - ../src/package.json:/app/package.json
            - ../src/tsconfig.json:/app/tsconfig.json
            - ../src/vite.config.js:/app/vite.config.js
        environment:
            - SERVICE=scheduler
        networks:
            - app-tier

    #  Reverb Container for Websockets
    reverb:
        container_name: reverb
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            # - ../src:/app
            - ./.env:/app/.env
            - ../src/app:/app/app
            - ../src/bootstrap:/app/bootstrap
            - ../src/config:/app/config
            - ../src/database:/app/database
            - ../src/keystore:/app/keystore
            - ../src/lang:/app/lang
            - ../src/node_modules:/app/node_modules
            - ../src/public:/app/public
            - ../src/resources:/app/resources
            - ../src/routes:/app/routes
            - ../src/vendor:/app/vendor
            - ../src/storage/app:/app/storage/app
            - ../src/storage/backups:/app/storage/backups
            - ../src/storage/debugbar:/app/storage/debugbar
            - ../src/storage/framework:/app/storage/framework
            - ../src/storage/logs/Reverb:/app/storage/logs/Application
            - ../src/storage/pail:/app/storage/pail
            - ../src/tests:/app/tests
            - ../src/artisan:/app/artisan
            - ../src/composer.json:/app/composer.json
            - ../src/composer.lock:/app/composer.lock
            - ../src/package-lock.json:/app/package-lock.json
            - ../src/package.json:/app/package.json
            - ../src/tsconfig.json:/app/tsconfig.json
            - ../src/vite.config.js:/app/vite.config.js
        networks:
            - app-tier
        depends_on:
            - database
            - redis
        entrypoint: php artisan reverb:start --debug

    # Melisearch Container for Search Engine
    meilisearch:
        image: getmeili/meilisearch:v1.9.0
        container_name: meilisearch
        restart: unless-stopped
        environment:
            - MEILI_MASTER_KEY=MeiliTBMaster
        networks:
            - app-tier
        ports:
            - 7700:7700

    ###########################################################################################
    #                               Dev Specific Containers                                   #
    ###########################################################################################

    #  Mailpit for Email Traps
    mailpit:
        image: axllent/mailpit:latest
        container_name: mailpit
        restart: unless-stopped
        networks:
            - app-tier
        ports:
            - "8025:8025"
            - "1025:1025"

    #  NPM Container to run npm run dev
    npm:
        container_name: npm
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        user: root
        volumes:
            - ../src:/app
            - ./.env:/app/.env
        environment:
            - SERVICE=app
        networks:
            - app-tier
        ports:
            - "5173:5173"
        entrypoint: npm run dev
