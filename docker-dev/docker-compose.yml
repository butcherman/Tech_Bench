#################################################################################################################
#                                                                                                               #
#                                                                                                               #
#                                      Tech Bench Docker Development                                            #
#         NOTE:  Modify .env file to change default passwords before executing `docker-compose up` command      #
#                                                                                                               #
#                                                                                                               #
#################################################################################################################
version: "3.8"
networks:
    app-tier:
        driver: bridge
volumes:
    appData:
services:
    #  Application Container
    tech_bench:
        container_name: tech_bench
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            - ../src:/app
        environment:
            - SERVICE=app
        networks:
            - app-tier

    #  NGINX Web Server
    nginx:
        image: butcherman/tech_bench_nginx:1.0
        container_name: nginx
        restart: unless-stopped
        volumes:
            - ../src:/app
        ports:
            - "80:80"
            - "443:443"
        networks:
            - app-tier
        depends_on:
            - tech_bench

    #  MySQL Database Container
    database:
        image: butcherman/tech_bench_database:1.0
        container_name: database
        restart: unless-stopped
        volumes:
            - ../appData/database:/bitnami/mysql/data
            - ./database/setup.dev.sql:/docker-entrypoint-initdb.d/setup.dev.sql
        networks:
            - app-tier
        ports:
            - "3306:3306"

    #  Redis Container for Cache, Job and Email Queuing
    redis:
        image: butcherman/tech_bench_redis:1.0
        container_name: redis
        restart: unless-stopped
        volumes:
            - ../appData/redis:/bitnami/redis/data
        networks:
            - app-tier
        ports:
            - "6379:6379"

    #  Horizon Container to run background jobs
    # horizon:
    #     container_name: horizon
    #     restart: unless-stopped
    #     build:
    #         context: ./tech_bench
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ../src:/app
    #     environment:
    #         - SERVICE=horizon
    #     networks:
    #         - app-tier
    #     depends_on:
    #         - database
    #         - redis
    #     entrypoint: php artisan horizon:watch --without-tty

    #  Scheduler Container to monitor and run scheduled jobs
    # dev-scheduler:
    #     container_name: dev-scheduler
    #     restart: unless-stopped
    #     build:
    #         context: ./tech_bench
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ../src:/app
    #     environment:
    #         - SERVICE=scheduler
    #     networks:
    #         - app-tier
    #     depends_on:
    #         - database
    #         - redis

    #  Soketi Container for Broadcasting Realtime Notifications via Websockets
    # soketi:
    #     image: "quay.io/soketi/soketi:latest-16-alpine"
    #     container_name: soketi
    #     environment:
    #         SOKETI_DEBUG: "1"
    #         SOKETI_METRICS_SERVER_PORT: "9601"
    #         PUSHER_APP_KEY: app-key
    #         PUSHER_APP_ID: app-id
    #         PUSHER_APP_SECRET: app-secret
    #     ports:
    #         - "6001:6001"
    #         - "9601:9601"
    #     networks:
    #         - app-tier

    ###########################################################################################
    #                               Dev Specific Containers                                   #
    ###########################################################################################

    #  Mailpit for Email Traps
    mailpit:
        image: axllent/mailpit:latest
        container_name: mailpit
        restart: unless-stopped
        networks:
            - app-tier
        ports:
            - "8025:8025"
            - "1025:1025"

    #  NPM Container to run npm run dev
    npm:
        container_name: npm
        restart: unless-stopped
        build:
            context: ./tech_bench
            dockerfile: Dockerfile
        volumes:
            - ../src:/app
        environment:
            - SERVICE=app
        networks:
            - app-tier
        ports:
            - "5173:5173"
        # depends_on:
        #     - database
        #     - redis
        entrypoint: npm run dev
